"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/stripe";
exports.ids = ["pages/api/stripe"];
exports.modules = {

/***/ "stripe":
/*!*************************!*\
  !*** external "stripe" ***!
  \*************************/
/***/ ((module) => {

module.exports = import("stripe");;

/***/ }),

/***/ "(api)/./pages/api/stripe.js":
/*!*****************************!*\
  !*** ./pages/api/stripe.js ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var stripe__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stripe */ \"stripe\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([stripe__WEBPACK_IMPORTED_MODULE_0__]);\nstripe__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nconst stripe = new stripe__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"sk_test_51MyuznSFbzOUSF2VBmMj6k1eXlsFKXbvOiNopOD0PDIkWRL2Zkvu9VFiMTU1NjjTY9iiFoB6aIybgulG0f2kkiJz00g6mgBGFr\");\nasync function handler(req, res) {\n  if (req.method === 'POST') {\n    try {\n      const params = {\n        submit_type: 'pay',\n        mode: 'payment',\n        payment_method_types: ['card'],\n        billing_address_collection: 'auto',\n        shipping_options: [{\n          shipping_rate: 'shr_1Myv9sSFbzOUSF2VjDOx2Cmj'\n        }, {\n          shipping_rate: 'shr_1MyvCBSFbzOUSF2VER4gIjYc'\n        }],\n        line_items: req.body.map(item => {\n          const img = item.image[0].asset._ref;\n          const newImage = img.replace('image-', 'https://cdn.sanity.io/images/aq058v9m/production/').replace('-webp', '.webp').replace('-png', '.png').replace('-jpg', '.jpg');\n          return {\n            price_data: {\n              currency: 'inr',\n              product_data: {\n                name: item.name,\n                images: [newImage]\n              },\n              unit_amount: item.price * 100\n            },\n            adjustable_quantity: {\n              enabled: true,\n              minimum: 1\n            },\n            quantity: item.quantity\n          };\n        }),\n        success_url: `${req.headers.origin}/success`,\n        cancel_url: `${req.headers.origin}/canceled`\n      }; // Create Checkout Sessions from body params.\n\n      const session = await stripe.checkout.sessions.create(params);\n      res.status(200).json(session);\n    } catch (err) {\n      res.status(err.statusCode || 500).json(err.message);\n    }\n  } else {\n    res.setHeader('Allow', 'POST');\n    res.status(405).end('Method Not Allowed');\n  }\n}\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvc3RyaXBlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFFQSxNQUFNQyxNQUFNLEdBQUcsSUFBSUQsOENBQUosQ0FBV0UsNkdBQVgsQ0FBZjtBQUVlLGVBQWVHLE9BQWYsQ0FBdUJDLEdBQXZCLEVBQTRCQyxHQUE1QixFQUFpQztFQUM5QyxJQUFJRCxHQUFHLENBQUNFLE1BQUosS0FBZSxNQUFuQixFQUEyQjtJQUN6QixJQUFJO01BQ0YsTUFBTUMsTUFBTSxHQUFHO1FBQ2JDLFdBQVcsRUFBRSxLQURBO1FBRWJDLElBQUksRUFBRSxTQUZPO1FBR2JDLG9CQUFvQixFQUFFLENBQUMsTUFBRCxDQUhUO1FBSWJDLDBCQUEwQixFQUFFLE1BSmY7UUFLYkMsZ0JBQWdCLEVBQUUsQ0FDaEI7VUFBRUMsYUFBYSxFQUFFO1FBQWpCLENBRGdCLEVBRWhCO1VBQUVBLGFBQWEsRUFBRTtRQUFqQixDQUZnQixDQUxMO1FBU2JDLFVBQVUsRUFBRVYsR0FBRyxDQUFDVyxJQUFKLENBQVNDLEdBQVQsQ0FBY0MsSUFBRCxJQUFVO1VBQ2pDLE1BQU1DLEdBQUcsR0FBR0QsSUFBSSxDQUFDRSxLQUFMLENBQVcsQ0FBWCxFQUFjQyxLQUFkLENBQW9CQyxJQUFoQztVQUNBLE1BQU1DLFFBQVEsR0FBR0osR0FBRyxDQUFDSyxPQUFKLENBQVksUUFBWixFQUFzQixtREFBdEIsRUFBMkVBLE9BQTNFLENBQW1GLE9BQW5GLEVBQTRGLE9BQTVGLEVBQXFHQSxPQUFyRyxDQUE2RyxNQUE3RyxFQUFxSCxNQUFySCxFQUNoQkEsT0FEZ0IsQ0FDUixNQURRLEVBQ0EsTUFEQSxDQUFqQjtVQUdBLE9BQU87WUFDTEMsVUFBVSxFQUFFO2NBQ1ZDLFFBQVEsRUFBRSxLQURBO2NBRVZDLFlBQVksRUFBRTtnQkFDWkMsSUFBSSxFQUFFVixJQUFJLENBQUNVLElBREM7Z0JBRVpDLE1BQU0sRUFBRSxDQUFDTixRQUFEO2NBRkksQ0FGSjtjQU1WTyxXQUFXLEVBQUVaLElBQUksQ0FBQ2EsS0FBTCxHQUFhO1lBTmhCLENBRFA7WUFTTEMsbUJBQW1CLEVBQUU7Y0FDbkJDLE9BQU8sRUFBQyxJQURXO2NBRW5CQyxPQUFPLEVBQUU7WUFGVSxDQVRoQjtZQWFMQyxRQUFRLEVBQUVqQixJQUFJLENBQUNpQjtVQWJWLENBQVA7UUFlRCxDQXBCVyxDQVRDO1FBOEJiQyxXQUFXLEVBQUcsR0FBRS9CLEdBQUcsQ0FBQ2dDLE9BQUosQ0FBWUMsTUFBTyxVQTlCdEI7UUErQmJDLFVBQVUsRUFBRyxHQUFFbEMsR0FBRyxDQUFDZ0MsT0FBSixDQUFZQyxNQUFPO01BL0JyQixDQUFmLENBREUsQ0FtQ0Y7O01BQ0EsTUFBTUUsT0FBTyxHQUFHLE1BQU14QyxNQUFNLENBQUN5QyxRQUFQLENBQWdCQyxRQUFoQixDQUF5QkMsTUFBekIsQ0FBZ0NuQyxNQUFoQyxDQUF0QjtNQUVBRixHQUFHLENBQUNzQyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJMLE9BQXJCO0lBQ0QsQ0F2Q0QsQ0F1Q0UsT0FBT00sR0FBUCxFQUFZO01BQ1p4QyxHQUFHLENBQUNzQyxNQUFKLENBQVdFLEdBQUcsQ0FBQ0MsVUFBSixJQUFrQixHQUE3QixFQUFrQ0YsSUFBbEMsQ0FBdUNDLEdBQUcsQ0FBQ0UsT0FBM0M7SUFDRDtFQUNGLENBM0NELE1BMkNPO0lBQ0oxQyxHQUFHLENBQUMyQyxTQUFKLENBQWMsT0FBZCxFQUF1QixNQUF2QjtJQUNBM0MsR0FBRyxDQUFDc0MsTUFBSixDQUFXLEdBQVgsRUFBZ0JNLEdBQWhCLENBQW9CLG9CQUFwQjtFQUNGO0FBQ0YsQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Vjb21tZXJjZS8uL3BhZ2VzL2FwaS9zdHJpcGUuanM/ZDc4OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU3RyaXBlIGZyb20gJ3N0cmlwZSc7XHJcblxyXG5jb25zdCBzdHJpcGUgPSBuZXcgU3RyaXBlKHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NUUklQRV9TRUNSRVRfS0VZKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZXIocmVxLCByZXMpIHtcclxuICBpZiAocmVxLm1ldGhvZCA9PT0gJ1BPU1QnKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCBwYXJhbXMgPSB7XHJcbiAgICAgICAgc3VibWl0X3R5cGU6ICdwYXknLFxyXG4gICAgICAgIG1vZGU6ICdwYXltZW50JyxcclxuICAgICAgICBwYXltZW50X21ldGhvZF90eXBlczogWydjYXJkJ10sXHJcbiAgICAgICAgYmlsbGluZ19hZGRyZXNzX2NvbGxlY3Rpb246ICdhdXRvJyxcclxuICAgICAgICBzaGlwcGluZ19vcHRpb25zOiBbXHJcbiAgICAgICAgICB7IHNoaXBwaW5nX3JhdGU6ICdzaHJfMU15djlzU0Ziek9VU0YyVmpET3gyQ21qJyB9LFxyXG4gICAgICAgICAgeyBzaGlwcGluZ19yYXRlOiAnc2hyXzFNeXZDQlNGYnpPVVNGMlZFUjRnSWpZYycgfSxcclxuICAgICAgICBdLFxyXG4gICAgICAgIGxpbmVfaXRlbXM6IHJlcS5ib2R5Lm1hcCgoaXRlbSkgPT4ge1xyXG4gICAgICAgICAgY29uc3QgaW1nID0gaXRlbS5pbWFnZVswXS5hc3NldC5fcmVmO1xyXG4gICAgICAgICAgY29uc3QgbmV3SW1hZ2UgPSBpbWcucmVwbGFjZSgnaW1hZ2UtJywgJ2h0dHBzOi8vY2RuLnNhbml0eS5pby9pbWFnZXMvYXEwNTh2OW0vcHJvZHVjdGlvbi8nKS5yZXBsYWNlKCctd2VicCcsICcud2VicCcpLnJlcGxhY2UoJy1wbmcnLCAnLnBuZycpXHJcbiAgICAgICAgICAucmVwbGFjZSgnLWpwZycsICcuanBnJyk7XHJcblxyXG4gICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgcHJpY2VfZGF0YTogeyBcclxuICAgICAgICAgICAgICBjdXJyZW5jeTogJ2lucicsXHJcbiAgICAgICAgICAgICAgcHJvZHVjdF9kYXRhOiB7IFxyXG4gICAgICAgICAgICAgICAgbmFtZTogaXRlbS5uYW1lLFxyXG4gICAgICAgICAgICAgICAgaW1hZ2VzOiBbbmV3SW1hZ2VdLFxyXG4gICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgdW5pdF9hbW91bnQ6IGl0ZW0ucHJpY2UgKiAxMDAsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGFkanVzdGFibGVfcXVhbnRpdHk6IHtcclxuICAgICAgICAgICAgICBlbmFibGVkOnRydWUsXHJcbiAgICAgICAgICAgICAgbWluaW11bTogMSxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgcXVhbnRpdHk6IGl0ZW0ucXVhbnRpdHlcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KSxcclxuICAgICAgICBzdWNjZXNzX3VybDogYCR7cmVxLmhlYWRlcnMub3JpZ2lufS9zdWNjZXNzYCxcclxuICAgICAgICBjYW5jZWxfdXJsOiBgJHtyZXEuaGVhZGVycy5vcmlnaW59L2NhbmNlbGVkYCxcclxuICAgICAgfVxyXG5cclxuICAgICAgLy8gQ3JlYXRlIENoZWNrb3V0IFNlc3Npb25zIGZyb20gYm9keSBwYXJhbXMuXHJcbiAgICAgIGNvbnN0IHNlc3Npb24gPSBhd2FpdCBzdHJpcGUuY2hlY2tvdXQuc2Vzc2lvbnMuY3JlYXRlKHBhcmFtcyk7XHJcblxyXG4gICAgICByZXMuc3RhdHVzKDIwMCkuanNvbihzZXNzaW9uKTtcclxuICAgIH0gY2F0Y2ggKGVycikge1xyXG4gICAgICByZXMuc3RhdHVzKGVyci5zdGF0dXNDb2RlIHx8IDUwMCkuanNvbihlcnIubWVzc2FnZSk7XHJcbiAgICB9XHJcbiAgfSBlbHNlIHtcclxuICAgICByZXMuc2V0SGVhZGVyKCdBbGxvdycsICdQT1NUJyk7XHJcbiAgICAgcmVzLnN0YXR1cyg0MDUpLmVuZCgnTWV0aG9kIE5vdCBBbGxvd2VkJyk7XHJcbiAgfVxyXG59Il0sIm5hbWVzIjpbIlN0cmlwZSIsInN0cmlwZSIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19TVFJJUEVfU0VDUkVUX0tFWSIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJtZXRob2QiLCJwYXJhbXMiLCJzdWJtaXRfdHlwZSIsIm1vZGUiLCJwYXltZW50X21ldGhvZF90eXBlcyIsImJpbGxpbmdfYWRkcmVzc19jb2xsZWN0aW9uIiwic2hpcHBpbmdfb3B0aW9ucyIsInNoaXBwaW5nX3JhdGUiLCJsaW5lX2l0ZW1zIiwiYm9keSIsIm1hcCIsIml0ZW0iLCJpbWciLCJpbWFnZSIsImFzc2V0IiwiX3JlZiIsIm5ld0ltYWdlIiwicmVwbGFjZSIsInByaWNlX2RhdGEiLCJjdXJyZW5jeSIsInByb2R1Y3RfZGF0YSIsIm5hbWUiLCJpbWFnZXMiLCJ1bml0X2Ftb3VudCIsInByaWNlIiwiYWRqdXN0YWJsZV9xdWFudGl0eSIsImVuYWJsZWQiLCJtaW5pbXVtIiwicXVhbnRpdHkiLCJzdWNjZXNzX3VybCIsImhlYWRlcnMiLCJvcmlnaW4iLCJjYW5jZWxfdXJsIiwic2Vzc2lvbiIsImNoZWNrb3V0Iiwic2Vzc2lvbnMiLCJjcmVhdGUiLCJzdGF0dXMiLCJqc29uIiwiZXJyIiwic3RhdHVzQ29kZSIsIm1lc3NhZ2UiLCJzZXRIZWFkZXIiLCJlbmQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./pages/api/stripe.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/stripe.js"));
module.exports = __webpack_exports__;

})();